'use strict';

module.exports = function (sequelize, DataTypes) {
  var product = sequelize.define('product', {
    categoryId: DataTypes.INTEGER,
    subCategoryId: DataTypes.INTEGER,
    childCategoryId: DataTypes.INTEGER,
    name: DataTypes.STRING,
    slug: DataTypes.STRING,
    brand: DataTypes.STRING,
    unitSize: DataTypes.STRING,
    status: DataTypes.STRING,
    buyerPrice: DataTypes.INTEGER,
    price: DataTypes.INTEGER,
    qty: DataTypes.INTEGER,
    discountPer: DataTypes.INTEGER,
    discount: DataTypes.INTEGER,
    total: DataTypes.INTEGER,
    netPrice: DataTypes.INTEGER,
    photo: DataTypes.STRING,
    sortDesc: DataTypes.TEXT,
    desc: DataTypes.TEXT,
    phoneNumber: DataTypes.TEXT,
    square: DataTypes.FLOAT,
    province: DataTypes.STRING,
    district: DataTypes.STRING,
    ward: DataTypes.STRING,
    provinceText: DataTypes.STRING,
    districtText: DataTypes.STRING,
    wardText: DataTypes.STRING,
    budget: DataTypes.FLOAT,
    typeRoom: DataTypes.STRING,
    interior: DataTypes.STRING,
    endow: DataTypes.INTEGER,
    rating: DataTypes.INTEGER,
    product_id: DataTypes.STRING,
    note: {
      type: DataTypes.TEXT,
      allowNull: true
    },
    user_manager: {
      type: DataTypes.INTEGER
    },
    rent: {
      type: DataTypes.BOOLEAN
    },
    author_phone: {
      type: DataTypes.STRING,
      allowNull: true
    },
    address: {
      type: DataTypes.TEXT,
      allowNull: true
    },
    meta_description: {
      type: DataTypes.TEXT,
      allowNull: false
    }
  }, {});
  product.associate = function (models) {
    models.product.belongsTo(models.SubCategory, {
      foreignKey: 'subCategoryId'
    });
    models.product.hasMany(models.productphoto, {
      foreignKey: 'productId'
    });
    models.product.belongsTo(models.SubChildCategory, {
      foreignKey: 'childCategoryId'
    });
    models.product.hasMany(models.vendor_product, {
      foreignKey: 'productId'
    });
    models.product.hasMany(models.user_manager_product, {
      foreignKey: 'product_id'
    });
    models.product.belongsTo(models.user, {
      foreignKey: 'user_manager'
    });
  };
  return product;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwicHJvZHVjdCIsImRlZmluZSIsImNhdGVnb3J5SWQiLCJJTlRFR0VSIiwic3ViQ2F0ZWdvcnlJZCIsImNoaWxkQ2F0ZWdvcnlJZCIsIm5hbWUiLCJTVFJJTkciLCJzbHVnIiwiYnJhbmQiLCJ1bml0U2l6ZSIsInN0YXR1cyIsImJ1eWVyUHJpY2UiLCJwcmljZSIsInF0eSIsImRpc2NvdW50UGVyIiwiZGlzY291bnQiLCJ0b3RhbCIsIm5ldFByaWNlIiwicGhvdG8iLCJzb3J0RGVzYyIsIlRFWFQiLCJkZXNjIiwicGhvbmVOdW1iZXIiLCJzcXVhcmUiLCJGTE9BVCIsInByb3ZpbmNlIiwiZGlzdHJpY3QiLCJ3YXJkIiwicHJvdmluY2VUZXh0IiwiZGlzdHJpY3RUZXh0Iiwid2FyZFRleHQiLCJidWRnZXQiLCJ0eXBlUm9vbSIsImludGVyaW9yIiwiZW5kb3ciLCJyYXRpbmciLCJwcm9kdWN0X2lkIiwibm90ZSIsInR5cGUiLCJhbGxvd051bGwiLCJ1c2VyX21hbmFnZXIiLCJyZW50IiwiQk9PTEVBTiIsImF1dGhvcl9waG9uZSIsImFkZHJlc3MiLCJtZXRhX2Rlc2NyaXB0aW9uIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiU3ViQ2F0ZWdvcnkiLCJmb3JlaWduS2V5IiwiaGFzTWFueSIsInByb2R1Y3RwaG90byIsIlN1YkNoaWxkQ2F0ZWdvcnkiLCJ2ZW5kb3JfcHJvZHVjdCIsInVzZXJfbWFuYWdlcl9wcm9kdWN0IiwidXNlciJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvcHJvZHVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY29uc3QgcHJvZHVjdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3Byb2R1Y3QnLCB7XHJcbiAgICBjYXRlZ29yeUlkOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIHN1YkNhdGVnb3J5SWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgY2hpbGRDYXRlZ29yeUlkOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBzbHVnOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgYnJhbmQ6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICB1bml0U2l6ZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIHN0YXR1czogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGJ1eWVyUHJpY2U6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgcHJpY2U6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgcXR5OiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIGRpc2NvdW50UGVyOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIGRpc2NvdW50OiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIHRvdGFsOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIG5ldFByaWNlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIHBob3RvOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgc29ydERlc2M6IERhdGFUeXBlcy5URVhULFxyXG4gICAgZGVzYzogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICBwaG9uZU51bWJlcjogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICBzcXVhcmU6IERhdGFUeXBlcy5GTE9BVCxcclxuICAgIHByb3ZpbmNlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgZGlzdHJpY3Q6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICB3YXJkOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgcHJvdmluY2VUZXh0OiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgZGlzdHJpY3RUZXh0OiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgd2FyZFRleHQ6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBidWRnZXQ6IERhdGFUeXBlcy5GTE9BVCxcclxuICAgIHR5cGVSb29tOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgaW50ZXJpb3I6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBlbmRvdzogRGF0YVR5cGVzLklOVEVHRVIsXHJcbiAgICByYXRpbmc6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgcHJvZHVjdF9pZDogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIG5vdGU6IHtcclxuICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXHJcbiAgICAgIGFsbG93TnVsbDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIHVzZXJfbWFuYWdlcjoge1xyXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcclxuICAgIH0sXHJcbiAgICByZW50OiB7XHJcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxyXG4gICAgfSxcclxuICAgIGF1dGhvcl9waG9uZToge1xyXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICBhbGxvd051bGw6IHRydWVcclxuICAgIH0sXHJcbiAgICBhZGRyZXNzOiB7XHJcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5URVhULFxyXG4gICAgICBhbGxvd051bGw6IHRydWVcclxuICAgIH0sXHJcbiAgICBtZXRhX2Rlc2NyaXB0aW9uOiB7XHJcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5URVhULFxyXG4gICAgICBhbGxvd051bGw6IGZhbHNlXHJcbiAgICB9XHJcbiAgfSwge30pO1xyXG5cclxuICBwcm9kdWN0LmFzc29jaWF0ZSA9IGZ1bmN0aW9uIChtb2RlbHMpIHtcclxuICAgIG1vZGVscy5wcm9kdWN0LmJlbG9uZ3NUbyhtb2RlbHMuU3ViQ2F0ZWdvcnksIHsgZm9yZWlnbktleTogJ3N1YkNhdGVnb3J5SWQnIH0pO1xyXG4gICAgbW9kZWxzLnByb2R1Y3QuaGFzTWFueShtb2RlbHMucHJvZHVjdHBob3RvLCB7IGZvcmVpZ25LZXk6ICdwcm9kdWN0SWQnIH0pO1xyXG4gICAgbW9kZWxzLnByb2R1Y3QuYmVsb25nc1RvKG1vZGVscy5TdWJDaGlsZENhdGVnb3J5LCB7IGZvcmVpZ25LZXk6ICdjaGlsZENhdGVnb3J5SWQnIH0pO1xyXG4gICAgbW9kZWxzLnByb2R1Y3QuaGFzTWFueShtb2RlbHMudmVuZG9yX3Byb2R1Y3QsIHsgZm9yZWlnbktleTogJ3Byb2R1Y3RJZCcgfSk7XHJcbiAgICBtb2RlbHMucHJvZHVjdC5oYXNNYW55KG1vZGVscy51c2VyX21hbmFnZXJfcHJvZHVjdCwgeyBmb3JlaWduS2V5OiAncHJvZHVjdF9pZCcgfSk7XHJcbiAgICBtb2RlbHMucHJvZHVjdC5iZWxvbmdzVG8obW9kZWxzLnVzZXIsIHsgZm9yZWlnbktleTogJ3VzZXJfbWFuYWdlcicgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIHByb2R1Y3Q7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWkEsTUFBTSxDQUFDQyxPQUFPLEdBQUcsVUFBQ0MsU0FBUyxFQUFFQyxTQUFTLEVBQUs7RUFDekMsSUFBTUMsT0FBTyxHQUFHRixTQUFTLENBQUNHLE1BQU0sQ0FBQyxTQUFTLEVBQUU7SUFDMUNDLFVBQVUsRUFBRUgsU0FBUyxDQUFDSSxPQUFPO0lBQzdCQyxhQUFhLEVBQUVMLFNBQVMsQ0FBQ0ksT0FBTztJQUNoQ0UsZUFBZSxFQUFFTixTQUFTLENBQUNJLE9BQU87SUFDbENHLElBQUksRUFBRVAsU0FBUyxDQUFDUSxNQUFNO0lBQ3RCQyxJQUFJLEVBQUVULFNBQVMsQ0FBQ1EsTUFBTTtJQUN0QkUsS0FBSyxFQUFFVixTQUFTLENBQUNRLE1BQU07SUFDdkJHLFFBQVEsRUFBRVgsU0FBUyxDQUFDUSxNQUFNO0lBQzFCSSxNQUFNLEVBQUVaLFNBQVMsQ0FBQ1EsTUFBTTtJQUN4QkssVUFBVSxFQUFFYixTQUFTLENBQUNJLE9BQU87SUFDN0JVLEtBQUssRUFBRWQsU0FBUyxDQUFDSSxPQUFPO0lBQ3hCVyxHQUFHLEVBQUVmLFNBQVMsQ0FBQ0ksT0FBTztJQUN0QlksV0FBVyxFQUFFaEIsU0FBUyxDQUFDSSxPQUFPO0lBQzlCYSxRQUFRLEVBQUVqQixTQUFTLENBQUNJLE9BQU87SUFDM0JjLEtBQUssRUFBRWxCLFNBQVMsQ0FBQ0ksT0FBTztJQUN4QmUsUUFBUSxFQUFFbkIsU0FBUyxDQUFDSSxPQUFPO0lBQzNCZ0IsS0FBSyxFQUFFcEIsU0FBUyxDQUFDUSxNQUFNO0lBQ3ZCYSxRQUFRLEVBQUVyQixTQUFTLENBQUNzQixJQUFJO0lBQ3hCQyxJQUFJLEVBQUV2QixTQUFTLENBQUNzQixJQUFJO0lBQ3BCRSxXQUFXLEVBQUV4QixTQUFTLENBQUNzQixJQUFJO0lBQzNCRyxNQUFNLEVBQUV6QixTQUFTLENBQUMwQixLQUFLO0lBQ3ZCQyxRQUFRLEVBQUUzQixTQUFTLENBQUNRLE1BQU07SUFDMUJvQixRQUFRLEVBQUU1QixTQUFTLENBQUNRLE1BQU07SUFDMUJxQixJQUFJLEVBQUU3QixTQUFTLENBQUNRLE1BQU07SUFDdEJzQixZQUFZLEVBQUU5QixTQUFTLENBQUNRLE1BQU07SUFDOUJ1QixZQUFZLEVBQUUvQixTQUFTLENBQUNRLE1BQU07SUFDOUJ3QixRQUFRLEVBQUVoQyxTQUFTLENBQUNRLE1BQU07SUFDMUJ5QixNQUFNLEVBQUVqQyxTQUFTLENBQUMwQixLQUFLO0lBQ3ZCUSxRQUFRLEVBQUVsQyxTQUFTLENBQUNRLE1BQU07SUFDMUIyQixRQUFRLEVBQUVuQyxTQUFTLENBQUNRLE1BQU07SUFDMUI0QixLQUFLLEVBQUVwQyxTQUFTLENBQUNJLE9BQU87SUFDeEJpQyxNQUFNLEVBQUVyQyxTQUFTLENBQUNJLE9BQU87SUFDekJrQyxVQUFVLEVBQUV0QyxTQUFTLENBQUNRLE1BQU07SUFDNUIrQixJQUFJLEVBQUU7TUFDSkMsSUFBSSxFQUFFeEMsU0FBUyxDQUFDc0IsSUFBSTtNQUNwQm1CLFNBQVMsRUFBRTtJQUNiLENBQUM7SUFDREMsWUFBWSxFQUFFO01BQ1pGLElBQUksRUFBRXhDLFNBQVMsQ0FBQ0k7SUFDbEIsQ0FBQztJQUNEdUMsSUFBSSxFQUFFO01BQ0pILElBQUksRUFBRXhDLFNBQVMsQ0FBQzRDO0lBQ2xCLENBQUM7SUFDREMsWUFBWSxFQUFFO01BQ1pMLElBQUksRUFBRXhDLFNBQVMsQ0FBQ1EsTUFBTTtNQUN0QmlDLFNBQVMsRUFBRTtJQUNiLENBQUM7SUFDREssT0FBTyxFQUFFO01BQ1BOLElBQUksRUFBRXhDLFNBQVMsQ0FBQ3NCLElBQUk7TUFDcEJtQixTQUFTLEVBQUU7SUFDYixDQUFDO0lBQ0RNLGdCQUFnQixFQUFFO01BQ2hCUCxJQUFJLEVBQUV4QyxTQUFTLENBQUNzQixJQUFJO01BQ3BCbUIsU0FBUyxFQUFFO0lBQ2I7RUFDRixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7RUFFTnhDLE9BQU8sQ0FBQytDLFNBQVMsR0FBRyxVQUFVQyxNQUFNLEVBQUU7SUFDcENBLE1BQU0sQ0FBQ2hELE9BQU8sQ0FBQ2lELFNBQVMsQ0FBQ0QsTUFBTSxDQUFDRSxXQUFXLEVBQUU7TUFBRUMsVUFBVSxFQUFFO0lBQWdCLENBQUMsQ0FBQztJQUM3RUgsTUFBTSxDQUFDaEQsT0FBTyxDQUFDb0QsT0FBTyxDQUFDSixNQUFNLENBQUNLLFlBQVksRUFBRTtNQUFFRixVQUFVLEVBQUU7SUFBWSxDQUFDLENBQUM7SUFDeEVILE1BQU0sQ0FBQ2hELE9BQU8sQ0FBQ2lELFNBQVMsQ0FBQ0QsTUFBTSxDQUFDTSxnQkFBZ0IsRUFBRTtNQUFFSCxVQUFVLEVBQUU7SUFBa0IsQ0FBQyxDQUFDO0lBQ3BGSCxNQUFNLENBQUNoRCxPQUFPLENBQUNvRCxPQUFPLENBQUNKLE1BQU0sQ0FBQ08sY0FBYyxFQUFFO01BQUVKLFVBQVUsRUFBRTtJQUFZLENBQUMsQ0FBQztJQUMxRUgsTUFBTSxDQUFDaEQsT0FBTyxDQUFDb0QsT0FBTyxDQUFDSixNQUFNLENBQUNRLG9CQUFvQixFQUFFO01BQUVMLFVBQVUsRUFBRTtJQUFhLENBQUMsQ0FBQztJQUNqRkgsTUFBTSxDQUFDaEQsT0FBTyxDQUFDaUQsU0FBUyxDQUFDRCxNQUFNLENBQUNTLElBQUksRUFBRTtNQUFFTixVQUFVLEVBQUU7SUFBZSxDQUFDLENBQUM7RUFDdkUsQ0FBQztFQUVELE9BQU9uRCxPQUFPO0FBQ2hCLENBQUMifQ==