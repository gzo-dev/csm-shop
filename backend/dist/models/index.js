"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.db = void 0;
var _fs = require("fs");
var _path = require("path");
var _sequelize = _interopRequireDefault(require("sequelize"));
var _config = _interopRequireDefault(require("../config"));
var basename = (0, _path.basename)(__filename);
var db = {};
exports.db = db;
var sequelize = new _sequelize["default"](_config["default"].db.database, _config["default"].db.username, _config["default"].db.password, {
  host: _config["default"].db.host,
  port: _config["default"].db.port,
  dialect: _config["default"].db.connection,
  logging: false,
  underscored: true,
  pool: {
    max: 20,
    min: 1,
    idle: 20000,
    acquire: 1000000
  },
  timestamps: true
});
(0, _fs.readdirSync)(__dirname).filter(function (file) {
  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';
}).forEach(function (file) {
  var model = sequelize['import']((0, _path.join)(__dirname, file));
  db[model.name] = model;
});
Object.keys(db).forEach(function (modelName) {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});
db.sequelize = sequelize;
db.Sequelize = _sequelize["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnMiLCJyZXF1aXJlIiwiX3BhdGgiLCJfc2VxdWVsaXplIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jb25maWciLCJiYXNlbmFtZSIsIl9iYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJkYiIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJjb25maWciLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJob3N0IiwicG9ydCIsImRpYWxlY3QiLCJjb25uZWN0aW9uIiwibG9nZ2luZyIsInVuZGVyc2NvcmVkIiwicG9vbCIsIm1heCIsIm1pbiIsImlkbGUiLCJhY3F1aXJlIiwidGltZXN0YW1wcyIsInJlYWRkaXJTeW5jIiwiX19kaXJuYW1lIiwiZmlsdGVyIiwiZmlsZSIsImluZGV4T2YiLCJzbGljZSIsImZvckVhY2giLCJtb2RlbCIsImpvaW4iLCJuYW1lIiwiT2JqZWN0Iiwia2V5cyIsIm1vZGVsTmFtZSIsImFzc29jaWF0ZSJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZGRpclN5bmMgfSBmcm9tICdmcyc7XG5pbXBvcnQgeyBiYXNlbmFtZSBhcyBfYmFzZW5hbWUsIGpvaW4gfSBmcm9tICdwYXRoJztcbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcbmNvbnN0IGJhc2VuYW1lID0gX2Jhc2VuYW1lKF9fZmlsZW5hbWUpO1xuY29uc3QgZGIgPSB7fTtcblxubGV0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoY29uZmlnLmRiLmRhdGFiYXNlLCBjb25maWcuZGIudXNlcm5hbWUsIGNvbmZpZy5kYi5wYXNzd29yZCwge1xuICAgIGhvc3Q6IGNvbmZpZy5kYi5ob3N0LFxuICAgIHBvcnQ6IGNvbmZpZy5kYi5wb3J0LFxuICAgIGRpYWxlY3Q6IGNvbmZpZy5kYi5jb25uZWN0aW9uLFxuICAgIGxvZ2dpbmc6IGZhbHNlLFxuICAgIHVuZGVyc2NvcmVkOiB0cnVlLFxuICAgIHBvb2w6IHtcbiAgICAgICAgbWF4OiAyMCxcbiAgICAgICAgbWluOiAxLFxuICAgICAgICBpZGxlOiAyMDAwMCxcbiAgICAgICAgYWNxdWlyZTogMTAwMDAwMFxuICAgIH0sXG4gICAgdGltZXN0YW1wczp0cnVlXG59KTtcblxucmVhZGRpclN5bmMoX19kaXJuYW1lKVxuICAgIC5maWx0ZXIoZmlsZSA9PiB7XG4gICAgICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XG4gICAgfSlcbiAgICAuZm9yRWFjaChmaWxlID0+IHtcbiAgICAgICAgY29uc3QgbW9kZWwgPSBzZXF1ZWxpemVbJ2ltcG9ydCddKGpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgICAgIGRiW21vZGVsLm5hbWVdID0gbW9kZWw7XG4gICAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gICAgaWYgKGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKSB7XG4gICAgICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgICB9XG59KTtcblxuZGIuc2VxdWVsaXplID0gc2VxdWVsaXplO1xuZGIuU2VxdWVsaXplID0gU2VxdWVsaXplO1xuXG5leHBvcnQgeyBkYiB9OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLEdBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFVBQUEsR0FBQUMsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQUFJLE9BQUEsR0FBQUQsc0JBQUEsQ0FBQUgsT0FBQTtBQUNBLElBQU1LLFFBQVEsR0FBRyxJQUFBQyxjQUFTLEVBQUNDLFVBQVUsQ0FBQztBQUN0QyxJQUFNQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQUNDLE9BQUEsQ0FBQUQsRUFBQSxHQUFBQSxFQUFBO0FBRWQsSUFBSUUsU0FBUyxHQUFHLElBQUlDLHFCQUFTLENBQUNDLGtCQUFNLENBQUNKLEVBQUUsQ0FBQ0ssUUFBUSxFQUFFRCxrQkFBTSxDQUFDSixFQUFFLENBQUNNLFFBQVEsRUFBRUYsa0JBQU0sQ0FBQ0osRUFBRSxDQUFDTyxRQUFRLEVBQUU7RUFDdEZDLElBQUksRUFBRUosa0JBQU0sQ0FBQ0osRUFBRSxDQUFDUSxJQUFJO0VBQ3BCQyxJQUFJLEVBQUVMLGtCQUFNLENBQUNKLEVBQUUsQ0FBQ1MsSUFBSTtFQUNwQkMsT0FBTyxFQUFFTixrQkFBTSxDQUFDSixFQUFFLENBQUNXLFVBQVU7RUFDN0JDLE9BQU8sRUFBRSxLQUFLO0VBQ2RDLFdBQVcsRUFBRSxJQUFJO0VBQ2pCQyxJQUFJLEVBQUU7SUFDRkMsR0FBRyxFQUFFLEVBQUU7SUFDUEMsR0FBRyxFQUFFLENBQUM7SUFDTkMsSUFBSSxFQUFFLEtBQUs7SUFDWEMsT0FBTyxFQUFFO0VBQ2IsQ0FBQztFQUNEQyxVQUFVLEVBQUM7QUFDZixDQUFDLENBQUM7QUFFRixJQUFBQyxlQUFXLEVBQUNDLFNBQVMsQ0FBQyxDQUNqQkMsTUFBTSxDQUFDLFVBQUFDLElBQUksRUFBSTtFQUNaLE9BQVFBLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBTUQsSUFBSSxLQUFLMUIsUUFBUyxJQUFLMEIsSUFBSSxDQUFDRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFNO0FBQ3pGLENBQUMsQ0FBQyxDQUNEQyxPQUFPLENBQUMsVUFBQUgsSUFBSSxFQUFJO0VBQ2IsSUFBTUksS0FBSyxHQUFHekIsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUEwQixVQUFJLEVBQUNQLFNBQVMsRUFBRUUsSUFBSSxDQUFDLENBQUM7RUFDeER2QixFQUFFLENBQUMyQixLQUFLLENBQUNFLElBQUksQ0FBQyxHQUFHRixLQUFLO0FBQzFCLENBQUMsQ0FBQztBQUVORyxNQUFNLENBQUNDLElBQUksQ0FBQy9CLEVBQUUsQ0FBQyxDQUFDMEIsT0FBTyxDQUFDLFVBQUFNLFNBQVMsRUFBSTtFQUNqQyxJQUFJaEMsRUFBRSxDQUFDZ0MsU0FBUyxDQUFDLENBQUNDLFNBQVMsRUFBRTtJQUN6QmpDLEVBQUUsQ0FBQ2dDLFNBQVMsQ0FBQyxDQUFDQyxTQUFTLENBQUNqQyxFQUFFLENBQUM7RUFDL0I7QUFDSixDQUFDLENBQUM7QUFFRkEsRUFBRSxDQUFDRSxTQUFTLEdBQUdBLFNBQVM7QUFDeEJGLEVBQUUsQ0FBQ0csU0FBUyxHQUFHQSxxQkFBUyJ9