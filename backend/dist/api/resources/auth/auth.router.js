"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.authRouter = void 0;
var _express = _interopRequireDefault(require("express"));
var _auth = _interopRequireDefault(require("./auth.controller"));
var _verify_token = _interopRequireDefault(require("../../../middleware/verify_token"));
// import { localStrategy , jwtStrategy} from '../../../middleware/strategy';
// import { sanitize } from '../../../middleware/sanitizer';
// import { validateBody, schemas } from '../../../middleware/validator';

var authRouter = _express["default"].Router();
exports.authRouter = authRouter;
authRouter.route('/register').post(_verify_token["default"], _auth["default"].addUser);
authRouter.route('/2fa').post(_verify_token["default"], _auth["default"].verify2fa);
authRouter.route('/verify/otp').post(_verify_token["default"], _auth["default"].verifyOtp);
authRouter.route('/user/getAllUserList').get(_verify_token["default"], _auth["default"].getAllUserList);
authRouter.route('/info').get(_verify_token["default"], _auth["default"].findUser);
authRouter.route('/user/leader').get(_auth["default"].getAllLeader);
authRouter.route('/user/update').post(_auth["default"].userUpdate);
authRouter.route('/user/delete').post(_auth["default"].deleteUserList);
authRouter.route('/rootLogin').post(_auth["default"].login);
authRouter.route('/verification').post(_auth["default"].verifyMail);
authRouter.route('/leader/list/employee').get(_auth["default"].getListEmployeeOfLeader);
authRouter.route('/leader/list/employee').put(_auth["default"].updateEmployeeOfLeader);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2F1dGgiLCJfdmVyaWZ5X3Rva2VuIiwiYXV0aFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJleHBvcnRzIiwicm91dGUiLCJwb3N0IiwiYXV0aGVudGljYXRlSldUIiwiYXV0aENvbnRyb2xsZXIiLCJhZGRVc2VyIiwidmVyaWZ5MmZhIiwidmVyaWZ5T3RwIiwiZ2V0IiwiZ2V0QWxsVXNlckxpc3QiLCJmaW5kVXNlciIsImdldEFsbExlYWRlciIsInVzZXJVcGRhdGUiLCJkZWxldGVVc2VyTGlzdCIsImxvZ2luIiwidmVyaWZ5TWFpbCIsImdldExpc3RFbXBsb3llZU9mTGVhZGVyIiwicHV0IiwidXBkYXRlRW1wbG95ZWVPZkxlYWRlciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hcGkvcmVzb3VyY2VzL2F1dGgvYXV0aC5yb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBhdXRoQ29udHJvbGxlciBmcm9tICcuL2F1dGguY29udHJvbGxlcic7XHJcbmltcG9ydCBhdXRoZW50aWNhdGVKV1QgZnJvbSAnLi4vLi4vLi4vbWlkZGxld2FyZS92ZXJpZnlfdG9rZW4nO1xyXG4vLyBpbXBvcnQgeyBsb2NhbFN0cmF0ZWd5ICwgand0U3RyYXRlZ3l9IGZyb20gJy4uLy4uLy4uL21pZGRsZXdhcmUvc3RyYXRlZ3knO1xyXG4vLyBpbXBvcnQgeyBzYW5pdGl6ZSB9IGZyb20gJy4uLy4uLy4uL21pZGRsZXdhcmUvc2FuaXRpemVyJztcclxuLy8gaW1wb3J0IHsgdmFsaWRhdGVCb2R5LCBzY2hlbWFzIH0gZnJvbSAnLi4vLi4vLi4vbWlkZGxld2FyZS92YWxpZGF0b3InO1xyXG5cclxuZXhwb3J0IGNvbnN0IGF1dGhSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5hdXRoUm91dGVyLnJvdXRlKCcvcmVnaXN0ZXInKS5wb3N0KGF1dGhlbnRpY2F0ZUpXVCwgYXV0aENvbnRyb2xsZXIuYWRkVXNlcik7XHJcbmF1dGhSb3V0ZXIucm91dGUoJy8yZmEnKS5wb3N0KGF1dGhlbnRpY2F0ZUpXVCwgYXV0aENvbnRyb2xsZXIudmVyaWZ5MmZhKTtcclxuYXV0aFJvdXRlci5yb3V0ZSgnL3ZlcmlmeS9vdHAnKS5wb3N0KGF1dGhlbnRpY2F0ZUpXVCwgYXV0aENvbnRyb2xsZXIudmVyaWZ5T3RwKTtcclxuYXV0aFJvdXRlci5yb3V0ZSgnL3VzZXIvZ2V0QWxsVXNlckxpc3QnKS5nZXQoYXV0aGVudGljYXRlSldULCBhdXRoQ29udHJvbGxlci5nZXRBbGxVc2VyTGlzdCk7XHJcbmF1dGhSb3V0ZXIucm91dGUoJy9pbmZvJykuZ2V0KGF1dGhlbnRpY2F0ZUpXVCwgYXV0aENvbnRyb2xsZXIuZmluZFVzZXIpO1xyXG5hdXRoUm91dGVyLnJvdXRlKCcvdXNlci9sZWFkZXInKS5nZXQoYXV0aENvbnRyb2xsZXIuZ2V0QWxsTGVhZGVyKTtcclxuYXV0aFJvdXRlci5yb3V0ZSgnL3VzZXIvdXBkYXRlJykucG9zdChhdXRoQ29udHJvbGxlci51c2VyVXBkYXRlKTtcclxuYXV0aFJvdXRlci5yb3V0ZSgnL3VzZXIvZGVsZXRlJykucG9zdChhdXRoQ29udHJvbGxlci5kZWxldGVVc2VyTGlzdCk7XHJcbmF1dGhSb3V0ZXIucm91dGUoJy9yb290TG9naW4nKS5wb3N0KGF1dGhDb250cm9sbGVyLmxvZ2luKTtcclxuYXV0aFJvdXRlci5yb3V0ZSgnL3ZlcmlmaWNhdGlvbicpLnBvc3QoYXV0aENvbnRyb2xsZXIudmVyaWZ5TWFpbClcclxuYXV0aFJvdXRlci5yb3V0ZSgnL2xlYWRlci9saXN0L2VtcGxveWVlJykuZ2V0KGF1dGhDb250cm9sbGVyLmdldExpc3RFbXBsb3llZU9mTGVhZGVyKVxyXG5hdXRoUm91dGVyLnJvdXRlKCcvbGVhZGVyL2xpc3QvZW1wbG95ZWUnKS5wdXQoYXV0aENvbnRyb2xsZXIudXBkYXRlRW1wbG95ZWVPZkxlYWRlcilcclxuXHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLElBQU1HLFVBQVUsR0FBR0MsbUJBQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFBQ0MsT0FBQSxDQUFBSCxVQUFBLEdBQUFBLFVBQUE7QUFDM0NBLFVBQVUsQ0FBQ0ksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDQyxJQUFJLENBQUNDLHdCQUFlLEVBQUVDLGdCQUFjLENBQUNDLE9BQU8sQ0FBQztBQUMzRVIsVUFBVSxDQUFDSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUNDLElBQUksQ0FBQ0Msd0JBQWUsRUFBRUMsZ0JBQWMsQ0FBQ0UsU0FBUyxDQUFDO0FBQ3hFVCxVQUFVLENBQUNJLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQ0MsSUFBSSxDQUFDQyx3QkFBZSxFQUFFQyxnQkFBYyxDQUFDRyxTQUFTLENBQUM7QUFDL0VWLFVBQVUsQ0FBQ0ksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUNPLEdBQUcsQ0FBQ0wsd0JBQWUsRUFBRUMsZ0JBQWMsQ0FBQ0ssY0FBYyxDQUFDO0FBQzVGWixVQUFVLENBQUNJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQ08sR0FBRyxDQUFDTCx3QkFBZSxFQUFFQyxnQkFBYyxDQUFDTSxRQUFRLENBQUM7QUFDdkViLFVBQVUsQ0FBQ0ksS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDTyxHQUFHLENBQUNKLGdCQUFjLENBQUNPLFlBQVksQ0FBQztBQUNqRWQsVUFBVSxDQUFDSSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUNDLElBQUksQ0FBQ0UsZ0JBQWMsQ0FBQ1EsVUFBVSxDQUFDO0FBQ2hFZixVQUFVLENBQUNJLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRSxnQkFBYyxDQUFDUyxjQUFjLENBQUM7QUFDcEVoQixVQUFVLENBQUNJLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRSxnQkFBYyxDQUFDVSxLQUFLLENBQUM7QUFDekRqQixVQUFVLENBQUNJLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQ0MsSUFBSSxDQUFDRSxnQkFBYyxDQUFDVyxVQUFVLENBQUM7QUFDakVsQixVQUFVLENBQUNJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDTyxHQUFHLENBQUNKLGdCQUFjLENBQUNZLHVCQUF1QixDQUFDO0FBQ3JGbkIsVUFBVSxDQUFDSSxLQUFLLENBQUMsdUJBQXVCLENBQUMsQ0FBQ2dCLEdBQUcsQ0FBQ2IsZ0JBQWMsQ0FBQ2Msc0JBQXNCLENBQUMifQ==