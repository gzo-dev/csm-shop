"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.customerRouter = void 0;
var _express = _interopRequireDefault(require("express"));
var _customer = _interopRequireDefault(require("./customer.controller"));
var _sanitizer = require("../../../middleware/sanitizer");
var _strategy = require("../../../middleware/strategy");
var _validator = require("../../../middleware/validator");
var _verify_token = _interopRequireDefault(require("../../../middleware/verify_token"));
var customerRouter = _express["default"].Router();
exports.customerRouter = customerRouter;
customerRouter.route('/register').post(_customer["default"].addUser);
customerRouter.route('/getUserByEmailId').get(_customer["default"].findUser);
customerRouter.route('/login').post(_customer["default"].login);

// get all customer
customerRouter.route('/list').get(_customer["default"].getAllCustomer);
customerRouter.route('/update').post(_customer["default"].getCustomerUpdate);
customerRouter.route('/delete')["delete"](_customer["default"].deleteCustomer);
customerRouter.route("/voucher").get(_verify_token["default"], _customer["default"].getVoucherCustomer);
customerRouter.route("/voucher/has").get(_verify_token["default"], _customer["default"].getVoucherCustomer2);
customerRouter.route("/voucher").post(_verify_token["default"], _customer["default"].postVoucherCustomer);
customerRouter.route("/voucher").put(_verify_token["default"], _customer["default"].putVoucherCustomer);
customerRouter.route("/voucher")["delete"](_verify_token["default"], _customer["default"].deleteVoucherCustomer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2N1c3RvbWVyIiwiX3Nhbml0aXplciIsIl9zdHJhdGVneSIsIl92YWxpZGF0b3IiLCJfdmVyaWZ5X3Rva2VuIiwiY3VzdG9tZXJSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZXhwb3J0cyIsInJvdXRlIiwicG9zdCIsImN1c3RvbWVyQ29udHJvbGxlciIsImFkZFVzZXIiLCJnZXQiLCJmaW5kVXNlciIsImxvZ2luIiwiZ2V0QWxsQ3VzdG9tZXIiLCJnZXRDdXN0b21lclVwZGF0ZSIsImRlbGV0ZUN1c3RvbWVyIiwiYXV0aGVudGljYXRlSldUIiwiZ2V0Vm91Y2hlckN1c3RvbWVyIiwiZ2V0Vm91Y2hlckN1c3RvbWVyMiIsInBvc3RWb3VjaGVyQ3VzdG9tZXIiLCJwdXQiLCJwdXRWb3VjaGVyQ3VzdG9tZXIiLCJkZWxldGVWb3VjaGVyQ3VzdG9tZXIiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXBpL3Jlc291cmNlcy9jdXN0b21lci9jdXN0b21lci5yb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY3VzdG9tZXJDb250cm9sbGVyIGZyb20gJy4vY3VzdG9tZXIuY29udHJvbGxlcic7XG5pbXBvcnQgeyBzYW5pdGl6ZSB9IGZyb20gJy4uLy4uLy4uL21pZGRsZXdhcmUvc2FuaXRpemVyJztcbmltcG9ydCB7IGN1c3RvbWVyU3RyYXRlZ3kgfSBmcm9tICcuLi8uLi8uLi9taWRkbGV3YXJlL3N0cmF0ZWd5JztcbmltcG9ydCB7IHZhbGlkYXRlQm9keSwgc2NoZW1hcyB9IGZyb20gJy4uLy4uLy4uL21pZGRsZXdhcmUvdmFsaWRhdG9yJztcbmltcG9ydCBhdXRoZW50aWNhdGVKV1QgZnJvbSAnLi4vLi4vLi4vbWlkZGxld2FyZS92ZXJpZnlfdG9rZW4nO1xuXG5leHBvcnQgY29uc3QgY3VzdG9tZXJSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jdXN0b21lclJvdXRlci5yb3V0ZSgnL3JlZ2lzdGVyJykucG9zdChjdXN0b21lckNvbnRyb2xsZXIuYWRkVXNlcik7XG5jdXN0b21lclJvdXRlci5yb3V0ZSgnL2dldFVzZXJCeUVtYWlsSWQnKS5nZXQoY3VzdG9tZXJDb250cm9sbGVyLmZpbmRVc2VyKTtcbmN1c3RvbWVyUm91dGVyLnJvdXRlKCcvbG9naW4nKS5wb3N0KGN1c3RvbWVyQ29udHJvbGxlci5sb2dpbik7XG5cblxuLy8gZ2V0IGFsbCBjdXN0b21lclxuY3VzdG9tZXJSb3V0ZXIucm91dGUoJy9saXN0JykuZ2V0KGN1c3RvbWVyQ29udHJvbGxlci5nZXRBbGxDdXN0b21lcik7XG5jdXN0b21lclJvdXRlci5yb3V0ZSgnL3VwZGF0ZScpLnBvc3QoY3VzdG9tZXJDb250cm9sbGVyLmdldEN1c3RvbWVyVXBkYXRlKTtcbmN1c3RvbWVyUm91dGVyLnJvdXRlKCcvZGVsZXRlJykuZGVsZXRlKGN1c3RvbWVyQ29udHJvbGxlci5kZWxldGVDdXN0b21lcik7XG5cbmN1c3RvbWVyUm91dGVyLnJvdXRlKFwiL3ZvdWNoZXJcIikuZ2V0KGF1dGhlbnRpY2F0ZUpXVCwgY3VzdG9tZXJDb250cm9sbGVyLmdldFZvdWNoZXJDdXN0b21lcilcbmN1c3RvbWVyUm91dGVyLnJvdXRlKFwiL3ZvdWNoZXIvaGFzXCIpLmdldChhdXRoZW50aWNhdGVKV1QsIGN1c3RvbWVyQ29udHJvbGxlci5nZXRWb3VjaGVyQ3VzdG9tZXIyKVxuY3VzdG9tZXJSb3V0ZXIucm91dGUoXCIvdm91Y2hlclwiKS5wb3N0KGF1dGhlbnRpY2F0ZUpXVCwgY3VzdG9tZXJDb250cm9sbGVyLnBvc3RWb3VjaGVyQ3VzdG9tZXIpXG5jdXN0b21lclJvdXRlci5yb3V0ZShcIi92b3VjaGVyXCIpLnB1dChhdXRoZW50aWNhdGVKV1QsIGN1c3RvbWVyQ29udHJvbGxlci5wdXRWb3VjaGVyQ3VzdG9tZXIpXG5jdXN0b21lclJvdXRlci5yb3V0ZShcIi92b3VjaGVyXCIpLmRlbGV0ZShhdXRoZW50aWNhdGVKV1QsIGN1c3RvbWVyQ29udHJvbGxlci5kZWxldGVWb3VjaGVyQ3VzdG9tZXIpXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxTQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxVQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxTQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxVQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxhQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFFTyxJQUFNTSxjQUFjLEdBQUdDLG1CQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0FBQUNDLE9BQUEsQ0FBQUgsY0FBQSxHQUFBQSxjQUFBO0FBRS9DQSxjQUFjLENBQUNJLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQ0MsSUFBSSxDQUFDQyxvQkFBa0IsQ0FBQ0MsT0FBTyxDQUFDO0FBQ2xFUCxjQUFjLENBQUNJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDSSxHQUFHLENBQUNGLG9CQUFrQixDQUFDRyxRQUFRLENBQUM7QUFDMUVULGNBQWMsQ0FBQ0ksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDQyxJQUFJLENBQUNDLG9CQUFrQixDQUFDSSxLQUFLLENBQUM7O0FBRzdEO0FBQ0FWLGNBQWMsQ0FBQ0ksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDSSxHQUFHLENBQUNGLG9CQUFrQixDQUFDSyxjQUFjLENBQUM7QUFDcEVYLGNBQWMsQ0FBQ0ksS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxJQUFJLENBQUNDLG9CQUFrQixDQUFDTSxpQkFBaUIsQ0FBQztBQUMxRVosY0FBYyxDQUFDSSxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQU8sQ0FBQ0Usb0JBQWtCLENBQUNPLGNBQWMsQ0FBQztBQUV6RWIsY0FBYyxDQUFDSSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUNJLEdBQUcsQ0FBQ00sd0JBQWUsRUFBRVIsb0JBQWtCLENBQUNTLGtCQUFrQixDQUFDO0FBQzVGZixjQUFjLENBQUNJLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQ0ksR0FBRyxDQUFDTSx3QkFBZSxFQUFFUixvQkFBa0IsQ0FBQ1UsbUJBQW1CLENBQUM7QUFDakdoQixjQUFjLENBQUNJLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQ0MsSUFBSSxDQUFDUyx3QkFBZSxFQUFFUixvQkFBa0IsQ0FBQ1csbUJBQW1CLENBQUM7QUFDOUZqQixjQUFjLENBQUNJLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQ2MsR0FBRyxDQUFDSix3QkFBZSxFQUFFUixvQkFBa0IsQ0FBQ2Esa0JBQWtCLENBQUM7QUFDNUZuQixjQUFjLENBQUNJLEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBTyxDQUFDVSx3QkFBZSxFQUFFUixvQkFBa0IsQ0FBQ2MscUJBQXFCLENBQUMifQ==