"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = _interopRequireDefault(require("express"));
var _morgan = _interopRequireDefault(require("morgan"));
var _path = _interopRequireDefault(require("path"));
var _passport = _interopRequireDefault(require("passport"));
var _expressSession = _interopRequireDefault(require("express-session"));
var _bodyParser = _interopRequireDefault(require("body-parser"));
var _cookieParser = _interopRequireDefault(require("cookie-parser"));
var _expressSanitizer = _interopRequireDefault(require("express-sanitizer"));
var _helmet = _interopRequireDefault(require("helmet"));
var _rotatingFileStream = _interopRequireDefault(require("rotating-file-stream"));
require("./passport");
var _default = {
  setup: function setup(config) {
    var app = (0, _express["default"])();
    var accessLogStream = (0, _rotatingFileStream["default"])("access.log", {
      interval: "1d",
      path: _path["default"].join(__dirname, "..", "log")
    });
    app.use(_express["default"]["static"](_path["default"].join(__dirname, "../", "watermark")));
    app.use((0, _morgan["default"])(config.app.log, {
      stream: accessLogStream
    }));
    app.set("view engine", "html");
    app.use(_bodyParser["default"].urlencoded({
      extended: true
    }));
    app.use(_bodyParser["default"].json({
      limit: "50mb"
    }));
    app.use((0, _cookieParser["default"])(config.app.secret));
    app.use((0, _expressSession["default"])({
      secret: config.app.secret,
      resave: true,
      saveUninitialized: true
    }));
    app.use("/photo", _express["default"]["static"](_path["default"].join(__dirname, "public/images")));
    app.use(_passport["default"].initialize());
    app.use(_passport["default"].session());
    app.use((0, _expressSanitizer["default"])());
    app.use((0, _helmet["default"])());
    app.use(_helmet["default"].hsts({
      maxAge: 0
    }));
    Number.prototype.pad = function (size) {
      var s = String(this);
      while (s.length < (size || 2)) {
        s = "0" + s;
      }
      return s;
    };
    return app;
  }
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX21vcmdhbiIsIl9wYXRoIiwiX3Bhc3Nwb3J0IiwiX2V4cHJlc3NTZXNzaW9uIiwiX2JvZHlQYXJzZXIiLCJfY29va2llUGFyc2VyIiwiX2V4cHJlc3NTYW5pdGl6ZXIiLCJfaGVsbWV0IiwiX3JvdGF0aW5nRmlsZVN0cmVhbSIsIl9kZWZhdWx0Iiwic2V0dXAiLCJjb25maWciLCJhcHAiLCJleHByZXNzIiwiYWNjZXNzTG9nU3RyZWFtIiwicmZzIiwiaW50ZXJ2YWwiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImxvZ2dlciIsImxvZyIsInN0cmVhbSIsInNldCIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwibGltaXQiLCJjb29raWVQYXJzZXIiLCJzZWNyZXQiLCJzZXNzaW9uIiwicmVzYXZlIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJwYXNzcG9ydCIsImluaXRpYWxpemUiLCJleHByZXNzU2FuaXRpemVyIiwiaGVsbWV0IiwiaHN0cyIsIm1heEFnZSIsIk51bWJlciIsInByb3RvdHlwZSIsInBhZCIsInNpemUiLCJzIiwiU3RyaW5nIiwibGVuZ3RoIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBsb2dnZXIgZnJvbSBcIm1vcmdhblwiO1xuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCBwYXNzcG9ydCBmcm9tIFwicGFzc3BvcnRcIjtcbmltcG9ydCBzZXNzaW9uIGZyb20gXCJleHByZXNzLXNlc3Npb25cIjtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tIFwiY29va2llLXBhcnNlclwiO1xuaW1wb3J0IGV4cHJlc3NTYW5pdGl6ZXIgZnJvbSBcImV4cHJlc3Mtc2FuaXRpemVyXCI7XG5pbXBvcnQgaGVsbWV0IGZyb20gXCJoZWxtZXRcIjtcbmltcG9ydCByZnMgZnJvbSBcInJvdGF0aW5nLWZpbGUtc3RyZWFtXCI7XG5pbXBvcnQgXCIuL3Bhc3Nwb3J0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2V0dXA6IChjb25maWcpID0+IHtcbiAgICBjb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbiAgICB2YXIgYWNjZXNzTG9nU3RyZWFtID0gcmZzKFwiYWNjZXNzLmxvZ1wiLCB7XG4gICAgICBpbnRlcnZhbDogXCIxZFwiLFxuICAgICAgcGF0aDogcGF0aC5qb2luKF9fZGlybmFtZSwgXCIuLlwiLCBcImxvZ1wiKSxcbiAgICB9KTtcbiAgICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsIFwiLi4vXCIsIFwid2F0ZXJtYXJrXCIpKSk7XG4gICAgYXBwLnVzZShsb2dnZXIoY29uZmlnLmFwcC5sb2csIHsgc3RyZWFtOiBhY2Nlc3NMb2dTdHJlYW0gfSkpO1xuICAgIGFwcC5zZXQoXCJ2aWV3IGVuZ2luZVwiLCBcImh0bWxcIik7XG4gICAgYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG4gICAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogXCI1MG1iXCIgfSkpO1xuXG4gICAgYXBwLnVzZShjb29raWVQYXJzZXIoY29uZmlnLmFwcC5zZWNyZXQpKTtcbiAgICBhcHAudXNlKFxuICAgICAgc2Vzc2lvbih7XG4gICAgICAgIHNlY3JldDogY29uZmlnLmFwcC5zZWNyZXQsXG4gICAgICAgIHJlc2F2ZTogdHJ1ZSxcbiAgICAgICAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWUsXG4gICAgICB9KVxuICAgICk7XG4gICAgYXBwLnVzZShcIi9waG90b1wiLCBleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCBcInB1YmxpYy9pbWFnZXNcIikpKTtcbiAgICBhcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XG4gICAgYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpO1xuICAgIGFwcC51c2UoZXhwcmVzc1Nhbml0aXplcigpKTtcbiAgICBhcHAudXNlKGhlbG1ldCgpKTtcbiAgICBhcHAudXNlKFxuICAgICAgaGVsbWV0LmhzdHMoe1xuICAgICAgICBtYXhBZ2U6IDAsXG4gICAgICB9KVxuICAgICk7XG5cbiAgICBOdW1iZXIucHJvdG90eXBlLnBhZCA9IGZ1bmN0aW9uIChzaXplKSB7XG4gICAgICB2YXIgcyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIHdoaWxlIChzLmxlbmd0aCA8IChzaXplIHx8IDIpKSB7XG4gICAgICAgIHMgPSBcIjBcIiArIHM7XG4gICAgICB9XG4gICAgICByZXR1cm4gcztcbiAgICB9O1xuXG4gICAgcmV0dXJuIGFwcDtcbiAgfSxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxTQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxlQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTSxhQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTyxpQkFBQSxHQUFBUixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQVEsT0FBQSxHQUFBVCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQVMsbUJBQUEsR0FBQVYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBQSxPQUFBO0FBQW9CLElBQUFVLFFBQUEsR0FFTDtFQUNiQyxLQUFLLEVBQUUsU0FBQUEsTUFB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