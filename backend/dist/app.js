"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = _interopRequireDefault(require("express"));
var _morgan = _interopRequireDefault(require("morgan"));
var _path = _interopRequireDefault(require("path"));
var _passport = _interopRequireDefault(require("passport"));
var _expressSession = _interopRequireDefault(require("express-session"));
var _bodyParser = _interopRequireDefault(require("body-parser"));
var _cookieParser = _interopRequireDefault(require("cookie-parser"));
var _expressSanitizer = _interopRequireDefault(require("express-sanitizer"));
var _helmet = _interopRequireDefault(require("helmet"));
var _rotatingFileStream = _interopRequireDefault(require("rotating-file-stream"));
require("./passport");
var _default = {
  setup: function setup(config) {
    var app = (0, _express["default"])();
    var accessLogStream = (0, _rotatingFileStream["default"])("access.log", {
      interval: "1d",
      path: _path["default"].join(__dirname, "..", "log")
    });
    app.use(_express["default"]["static"](_path["default"].join(__dirname, "../", "watermark")));
    app.use((0, _morgan["default"])(config.app.log, {
      stream: accessLogStream
    }));
    app.set("view engine", "html");
    app.use(_bodyParser["default"].urlencoded({
      extended: true,
      limit: "200mb",
      parameterLimit: 100000000
    }));
    app.use(_bodyParser["default"].json({
      limit: "200mb"
    }));
    app.use((0, _cookieParser["default"])(config.app.secret));
    app.use((0, _expressSession["default"])({
      secret: config.app.secret,
      resave: true,
      saveUninitialized: true
    }));
    app.use("/photo", _express["default"]["static"](_path["default"].join(__dirname, "public/images")));
    app.use(_passport["default"].initialize());
    app.use(_passport["default"].session());
    app.use((0, _expressSanitizer["default"])());
    app.use((0, _helmet["default"])());
    app.use(_helmet["default"].hsts({
      maxAge: 0
    }));
    Number.prototype.pad = function (size) {
      var s = String(this);
      while (s.length < (size || 2)) {
        s = "0" + s;
      }
      return s;
    };
    return app;
  }
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX21vcmdhbiIsIl9wYXRoIiwiX3Bhc3Nwb3J0IiwiX2V4cHJlc3NTZXNzaW9uIiwiX2JvZHlQYXJzZXIiLCJfY29va2llUGFyc2VyIiwiX2V4cHJlc3NTYW5pdGl6ZXIiLCJfaGVsbWV0IiwiX3JvdGF0aW5nRmlsZVN0cmVhbSIsIl9kZWZhdWx0Iiwic2V0dXAiLCJjb25maWciLCJhcHAiLCJleHByZXNzIiwiYWNjZXNzTG9nU3RyZWFtIiwicmZzIiwiaW50ZXJ2YWwiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImxvZ2dlciIsImxvZyIsInN0cmVhbSIsInNldCIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJsaW1pdCIsInBhcmFtZXRlckxpbWl0IiwianNvbiIsImNvb2tpZVBhcnNlciIsInNlY3JldCIsInNlc3Npb24iLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsInBhc3Nwb3J0IiwiaW5pdGlhbGl6ZSIsImV4cHJlc3NTYW5pdGl6ZXIiLCJoZWxtZXQiLCJoc3RzIiwibWF4QWdlIiwiTnVtYmVyIiwicHJvdG90eXBlIiwicGFkIiwic2l6ZSIsInMiLCJTdHJpbmciLCJsZW5ndGgiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vc3JjL2FwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgbG9nZ2VyIGZyb20gXCJtb3JnYW5cIjtcclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcclxuaW1wb3J0IHBhc3Nwb3J0IGZyb20gXCJwYXNzcG9ydFwiO1xyXG5pbXBvcnQgc2Vzc2lvbiBmcm9tIFwiZXhwcmVzcy1zZXNzaW9uXCI7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xyXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gXCJjb29raWUtcGFyc2VyXCI7XHJcbmltcG9ydCBleHByZXNzU2FuaXRpemVyIGZyb20gXCJleHByZXNzLXNhbml0aXplclwiO1xyXG5pbXBvcnQgaGVsbWV0IGZyb20gXCJoZWxtZXRcIjtcclxuaW1wb3J0IHJmcyBmcm9tIFwicm90YXRpbmctZmlsZS1zdHJlYW1cIjtcclxuaW1wb3J0IFwiLi9wYXNzcG9ydFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIHNldHVwOiAoY29uZmlnKSA9PiB7XHJcbiAgICBjb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4gICAgdmFyIGFjY2Vzc0xvZ1N0cmVhbSA9IHJmcyhcImFjY2Vzcy5sb2dcIiwge1xyXG4gICAgICBpbnRlcnZhbDogXCIxZFwiLFxyXG4gICAgICBwYXRoOiBwYXRoLmpvaW4oX19kaXJuYW1lLCBcIi4uXCIsIFwibG9nXCIpLFxyXG4gICAgfSk7XHJcbiAgICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsIFwiLi4vXCIsIFwid2F0ZXJtYXJrXCIpKSk7XHJcbiAgICBhcHAudXNlKGxvZ2dlcihjb25maWcuYXBwLmxvZywgeyBzdHJlYW06IGFjY2Vzc0xvZ1N0cmVhbSB9KSk7XHJcbiAgICBhcHAuc2V0KFwidmlldyBlbmdpbmVcIiwgXCJodG1sXCIpO1xyXG4gICAgYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSwgbGltaXQ6IFwiMjAwbWJcIiwgcGFyYW1ldGVyTGltaXQ6MTAwMDAwMDAwIH0pKTtcclxuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKHsgbGltaXQ6IFwiMjAwbWJcIiB9KSk7XHJcblxyXG4gICAgYXBwLnVzZShjb29raWVQYXJzZXIoY29uZmlnLmFwcC5zZWNyZXQpKTtcclxuICAgIGFwcC51c2UoXHJcbiAgICAgIHNlc3Npb24oe1xyXG4gICAgICAgIHNlY3JldDogY29uZmlnLmFwcC5zZWNyZXQsXHJcbiAgICAgICAgcmVzYXZlOiB0cnVlLFxyXG4gICAgICAgIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlLFxyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICAgIGFwcC51c2UoXCIvcGhvdG9cIiwgZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgXCJwdWJsaWMvaW1hZ2VzXCIpKSk7XHJcbiAgICBhcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XHJcbiAgICBhcHAudXNlKHBhc3Nwb3J0LnNlc3Npb24oKSk7XHJcbiAgICBhcHAudXNlKGV4cHJlc3NTYW5pdGl6ZXIoKSk7XHJcbiAgICBhcHAudXNlKGhlbG1ldCgpKTtcclxuICAgIGFwcC51c2UoXHJcbiAgICAgIGhlbG1ldC5oc3RzKHtcclxuICAgICAgICBtYXhBZ2U6IDAsXHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG5cclxuICAgIE51bWJlci5wcm90b3R5cGUucGFkID0gZnVuY3Rpb24gKHNpemUpIHtcclxuICAgICAgdmFyIHMgPSBTdHJpbmcodGhpcyk7XHJcbiAgICAgIHdoaWxlIChzLmxlbmd0aCA8IChzaXplIHx8IDIpKSB7XHJcbiAgICAgICAgcyA9IFwiMFwiICsgcztcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcztcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIGFwcDtcclxuICB9LFxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxTQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxlQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTSxhQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFD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